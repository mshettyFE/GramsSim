<?xml version = "1.0" encoding = "UTF-8" ?>

<!-- IMPORTANT: This file is an example for how to include one XML file within 
     another. It is NOT kept up-to date with the main GramsSim/options.xml. 
     Please see GramsSim/util/README.md for more. -->

<parameters>
  
  <global>

    <!-- The parameters in this section are meant to apply to all the
         programs. However, you can override them within the
         individual program blocks, though it's probably more useful
         to override them on the command line. Be careful about what
         you're overriding, especially the unit options. -->
  
    <!-- The following line does nothing! It's there for documentation:
    the default value of the 'options' option is "options.xml" -->
    <option name="options" value="options.xml" type="string" desc="XML file of options">
        If you want to, you can include text like this within an option
        tag. You can use this for additional documentation. The program
        does not read or interpret it. 
    </option>

    <option name="verbose" short="v" type="flag" desc="display details"/>
    <option name="debug" short="d" type="flag" />
    <option name="help" short="h" type="flag" desc="show help then exit" />

    <!-- Define a consistent set of units. Note that it's up to the
         individual programs to access these parameters and write
         their output in these units. (I'm looking at you, Geant4!).

         Length unit: as of Jan-2022, the only valid values are "cm" and "mm".
         Energy unit: as of Jan-2022, the only valid values are "MeV" and "GeV".
	 Time unit: as of Jan-2022, the only valid values are "ns", "ms", and "s".
     
         Note that this does not directly affect the GDML file and
         Geant4 macro files, as any dimensioned quantities in those
         files have units specified explicitly.
	 -->
    <option name="LengthUnit" type="string" value="cm" desc="length unit for program output" />
    <option name="EnergyUnit" type="string" value="MeV" desc="energy unit for program output" />
    <option name="TimeUnit"   type="string" value="ns" desc="time unit for program output" />

    <option name="rngseed" short="s" value="-1" type="integer" desc="random number seed">
        The random number seed for the simulation. Use 0 if you want the
        program to start with a random value and you're not interested 
        in recreating the run.
    </option>


  </global>

  <gramssky xml:id="gramssky">

    <!-- Number of sky events to generate -->
    <option name="events" short="n" value="1000" type="integer" desc="number of events" />

    <!-- Output HepMC3 file. If you omit an extension to this file
         name, then the program will append ".hepmc3" to the end of
         this parameter. -->
    <option name="outputfile" short="o" value="gramssky.hepmc3" type="string" 
        desc="output file"/>    

    <!-- The PDG (Particle Data Group) code of the primary
         particles. For a sky simulation, that will almost certainly
         be 22 (photon). -->
    <option name="PrimaryPDG" value="22" type="integer" desc="primary particle PDG code"/>    
    
    <!-- PositionGeneration = how to generate the primary particle
         positions. The following are allowed values:

	 "Point": Specify an (x,y,z) fixed position.
	 "Iso": Generate particles isotropically on a (theta,phi) region of the celestial sphere.

         See the <global> section above for units.
    -->

    <option name="PositionGeneration" value="Point" type="string" 
	    desc="how to generate primary positions"/> 

    <!-- The option(s) for "Point" -->
    <option name="PointSource" value="(0,0,200)" type="vector" 
	    desc="(x,y,z) for Point generation"/>    

    <!-- The option(s) for "Iso"; units are radians -->
    <option name="ThetaMinMax" value="(0,1.571)" type="vector" 
	    desc="theta (min,max) for Iso generation"/>    
    <option name="PhiMinMax" value="(0,6.283)" type="vector" 
	    desc="phi (min,max) for Iso generation"/>    
    
    <!-- How to generate the primary particle energies. The following
         are defined:

	 "Fixed": Specify a fixed energy.
	 "Gaus": Generate energy according to gaussian distribution.
	 "Flat": Uniformly generate energy between two limits.
	 "BlackBody": Generate energy according to black-body distribution.
	 "PowerLaw": Generate energy according to power-law distribution.
	 "Hist": Generate energy according to a ROOT histogram. 

         See the <global> section above for units.
    -->

    <option name="EnergyGeneration" value="Fixed" type="string" 
	    desc="how to generate primary energies"/>    

    <!-- Common to all energy distributions -->
    <option name="EnergyMin" value="0" type="double" 
	    desc="Minimum for energy distribution"/>
    <option name="EnergyMax" value="1000" type="double" 
	    desc="Maximum for energy distribution"/>

    <!-- Option(s) for "Fixed" energy distribution. -->
    <option name="FixedEnergy" value="1" type="double" 
	    desc="Energy for Fixed generation"/>    

    <!-- Option(s) for "Gaus" energy distribution. -->
    <option name="GausMean" value="2" type="double" 
	    desc="Mean for gaussian energy distribution"/>
    <option name="GausWidth" value="0.2" type="double" 
	    desc="Width for gaussian energy distribution"/>

    <!-- Option(s) for "Flat" energy distribution. -->
    <option name="FlatMin" value="1" type="double" 
	    desc="Minimum energy for flat distribution"/>
    <option name="FlatMax" value="3" type="double" 
	    desc="Maximum energy for flat distribution"/>

    <!-- Option(s) for "BlackBody" energy distribution. -->
    <option name="RadTemp" value="1" type="double" 
	    desc="Radiation temperature (kT) for black-body distribution"/>

    <!-- Option(s) for "PowerLaw" energy distribution. -->
    <option name="PhotonIndex" value="2" type="double" 
	    desc="Power-law exponent of the photon spectrum"/>

    <!-- Option(s) for "Hist" energy distribution. -->
    <!-- This can be a full or relative path to the file. -->
    <option name="HistFile" value="example.root" type="string" 
	    desc="Input file containing histogram"/>
    <!-- This can be a path to the histogram within the file. -->
    <option name="HistName" value="example" type="string" 
	    desc="Name of histogram in input file"/>

    <!-- In GramsSky, we generate a particle coming from the celestial
         sphere according to some energy/position
         distribution. However, the simulation's sphere has some
         finite radius within the world volume, while the actual
         celestial sphere is actually at "infinity".
	 
	     To simulate this effect, we construct an imaginary disc
	     tangent to the simulation sphere at the point of the
	     particle's generation; see GramsSky/SkyDiagram.jpg and
	     GramsSky/README.md for details. This routine randomly shifts
	     the origin of the particle across the surface of that disc.

         It also adjusts for the direction of the sphere with respect
         to detector coordinates, and the center of the detector with
         respect to the center of the sphere.

         See the <global> section above for units. As of Jan-2022,
         these are cm and MeV
    -->

    <!-- The radius of a sphere from which the particles will be
         generated. The units should be the same as those in the GDML
         file (centimeters as of Jan-2022). Make sure this sphere will
         fit in the world volume as defined in the GDML file. -->
    <option name="RadiusSphere" value="300" type="double" 
        desc="radius of generated particles"/>    
    
    <!-- The radius of the tangent disc. If this is <= 0, then
         RadiusSphere is used. -->
    <option name="RadiusDisc" value="0" type="double" 
        desc="radius of tangent disc"/> 

    <!-- The center of the simulated sphere in detector
         coordinates. 

         Bear in mind that the origin of the coordinate system is
         determined by the GRAMS GDML file, and as Jan-2022 it is
         _not_ the center of the detector. As of Jan-2022, the center
         of the LArTPC is (0,0,-14.783); the center of the overall
         detector is at (0,0,45.217). -->
    <option name="OriginSphere" value="(0,0,-15)" type="vector" 
        desc="detector center in detector coords"/> 
    
    <!-- This is the direction of the "north pole" of the celestial
         sphere in the detector coordinate system. Bear in mind that
         imported celestial maps are usually aligned with the galactic
         coordinate system, while the physical detector will have
         typically have some other orientation for its z-axis.

         If this vector has three elements, it's interpreted as
         (x,y,z). If it has two elements (e.g., (0.707,0)) then it's
         interpreted as (theta,phi).
    -->
    <option name="MapDirection" value="(0,0,1)" type="vector" 
        desc="map 'north pole' in detector coords"/> 

  </gramssky>

</parameters>
